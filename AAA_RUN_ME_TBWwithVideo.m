clear allHideCursor;rng('shuffle')%enter subjects informationsubjID = input('Subject ID (e.g., xyz0001): ','s');data.subjID = subjID;sex = input('Subject gender (m or f): ','s');data.sex=sex;age = input('Subject age: ','s');data.age = str2num(age);dayofexperiment = input('Experiment Day: ','s');data.dayofexperiment = dayofexperiment;prepost = input('Pre or Post: ','s');data.prepost = prepost;date = date;%input('Date (year-month-day): ','s');data.date = date;%str2num(date);fid = fopen('debug.txt','w');%create orderoffsets = [500 400 300 250 200 150 100 50 0 -50 -100 -150 -200 -250 -300 -400 -500];trials = 20;maxTrials = length(offsets)*trials;order(1:maxTrials,1) = 3;for i = 1:length(offsets)    order(i*trials - trials+1:i*trials,2) = offsets(i);    if offsets(i) == 0        order(i*trials - trials+1:i*trials,3) = 0;    elseif offsets(i) > 0        order(i*trials - trials+1:i*trials,3) = 1;    elseif offsets(i) < 0        order(i*trials - trials+1:i*trials,3) = 2;    endend%randomize trial ordersnewOrder=randperm(maxTrials);for i=1:maxTrials    stimOrder(i,:)=order(newOrder(i),:);endclear newOrder orderdata.stimOrder=stimOrder;data.stimOrder_guide.Column1= 'modality: 1=A, 2=V, 3=AV';data.stimOrder_guide.Column2 = 'temporal offset, + is VA, negative is AV';data.stimOrder_guide.Column3 = 'order, 0 = sync, 1 = V first, 2 = A first';%create file name to saverepeat=1;while 1    fname=sprintf('%s%sDATA%s%s_2AFCpercSync_%d.mat',pwd,filesep,filesep,subjID,repeat);    if exist(fname)==2,        repeat=repeat+1;    else        break;    endend% create responsesallKeys='12';fused = '1';unfused = '2';KbName('UnifyKeyNames'); %unify the keycodes for this computerrkey=KbName('Space'); %response key = space barescapekey = KbName('escape');spacekey=KbName('Space');% synch=KbName('1!');   %for use with number line above letters% asynch=KbName('2@');synch=KbName('1'); %for use with keypad numbersasynch=KbName('2');%keycode=zeros(1,256);[outRect hz win0 rect0 cWhite0 cBlack0 cGrey0 scr0]= OpenStandardScreen;%load files: stimuli, fixation; % stimulus RECTstimSize=476;stimRect = [1 1 stimSize stimSize];rectS=CenterRect([1 1 stimSize stimSize],rect0);load fixationcross = Screen('MakeTexture',win0,fixation);load ringflash = Screen('MakeTexture',win0,ring);baAV50 = '\ba_AV50_black.mov';baAV100 = '\ba_AV100_black.mov';baAV150 = '\ba_AV150_black.mov';baAV200 = '\ba_AV200_black.mov';baAV250 = '\ba_AV250_black.mov';baAV300 = '\ba_AV300_black.mov';baAV400 = '\ba_AV400_black.mov';baAV500 = '\ba_AV500_black.mov';baVA50 = '\ba_VA50_black.mov';baVA100 = '\ba_VA100_black.mov';baVA150 = '\ba_VA150_black.mov';baVA200 = '\ba_VA200_black.mov';baVA250 = '\ba_VA250_black.mov';baVA300 = '\ba_VA300_black.mov';baVA400 = '\ba_VA400_black.mov';baVA500 = '\ba_VA500_black.mov';ba = '\ba spoken congruent_black.mov';%allTrials(trial, modality, stimlevel, stimulus, onset time, word time,%offset time, response, corect response, mark)allTrials=zeros(maxTrials,12);resp=zeros(1,maxTrials);key='';while 1,    %wait Screen    oldtextsize=Screen('TextSize',win0,20);    Screen('DrawText',win0,'You will be presented with a speaker saying a syllable.',50,50,cWhite0);    Screen('DrawText',win0,'If the audio and visual were SYNCHRONOUS, ',50,100,cWhite0);    Screen('DrawText',win0,'If they were properly lined up, press 1.',75,150,cWhite0);    Screen('DrawText',win0,'If the audio and visual were ASYNCHRONOUS,',50,250,cWhite0);    Screen('DrawText',win0,'If they were NOT properly lined up, press 2.',75,300,cWhite0);    Screen('DrawText',win0,'Press the spacebar to continue.',50,450,cWhite0);    Screen('Flip',win0);    if KbCheck        [~,~,key]=KbCheck;        if key(spacekey)            break;        end    end;    end%%%Begin experimenttic;Screen('FillRect',win0,0, rect0);Screen('CopyWindow', cross, win0, stimRect, rectS)Screen('Flip',win0);ans=0;trial=1;while trial<=maxTrials    fprintf(fid,'\nTrial %d',trial);    Fs = 40000;    InitializePsychSound;    pahandle = PsychPortAudio('Open', [], [], 0, Fs, 1);    tone = makeTone(1800, 1, 10, Fs, 3);    %     tone = makeTone(1800, .1, 10, Fs, 3);    PsychPortAudio('FillBuffer', pahandle, tone);        %TAKE A BREAK EVERY 100 TRIALS    if trial > 1        if mod(trial,100) == 0            Screen('DrawText',win0,'Take a break if needed. Press the spacebar to continue.',50,450,cWhite0);            Screen('Flip',win0);                        key='';            while 1,                if KbCheck                    [~,~,key]=KbCheck;                    if key(spacekey)                        break;                    end                end;            end        end    end        FlushEvents('keydown');    % update variable allTrials with next trials info    allTrials(trial,1)=trial;   %trial number    allTrials(trial,2)=stimOrder(trial,1);  %stimulus modality    allTrials(trial,3)=stimOrder(trial,2);  %offset    allTrials(trial,4)=stimOrder(trial,3);  %VA (1) AV (2) or sync (0)        %find correct answer for upcomming trial    corAns(trial) = 2;    if stimOrder(trial,2) == 0; %only if synch is correct ans 1        corAns(trial) = 1;    end    allTrials(trial,11)=corAns(trial);  %index correct answer to compare to actual    data.responses(trial,1)=corAns(trial);        % put up ready Screen    Screen('CopyWindow', cross, win0, stimRect, rectS)    Screen('Flip',win0);        WaitSecs(.5+rand);        Priority(2)        FlushEvents('keydown');    %Present Stimulus     if stimOrder(trial,2) == -500        %play video        presentstim = toc;        moviename = [ cd baAV500 ];        movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME        Screen('PlayMovie', movie, 1);        presentstim = toc;        while 1            tex = Screen('GetMovieImage', win0, movie);            if tex<=0                break;            end;            Screen('DrawTexture', win0, tex);            Screen('Flip', win0);            Screen('Close', tex);        end;        Screen('PlayMovie', movie, 0);        Screen('CloseMovie', movie);        Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);     elseif stimOrder(trial,2) == -400        %play video        presentstim = toc;        moviename = [ cd baAV400 ];        movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME        Screen('PlayMovie', movie, 1);        presentstim = toc;        while 1            tex = Screen('GetMovieImage', win0, movie);            if tex<=0                break;            end;            Screen('DrawTexture', win0, tex);            Screen('Flip', win0);            Screen('Close', tex);        end;        Screen('PlayMovie', movie, 0);        Screen('CloseMovie', movie);        Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);    elseif stimOrder(trial,2) == -300        %play video        presentstim = toc;        moviename = [ cd baAV300 ];        movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME        Screen('PlayMovie', movie, 1);        presentstim = toc;        while 1            tex = Screen('GetMovieImage', win0, movie);            if tex<=0                break;            end;            Screen('DrawTexture', win0, tex);            Screen('Flip', win0);            Screen('Close', tex);        end;        Screen('PlayMovie', movie, 0);        Screen('CloseMovie', movie);        Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);    elseif stimOrder(trial,2) == -250        %play video        presentstim = toc;        moviename = [ cd baAV250 ];        movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME        Screen('PlayMovie', movie, 1);        presentstim = toc;        while 1            tex = Screen('GetMovieImage', win0, movie);            if tex<=0                break;            end;            Screen('DrawTexture', win0, tex);            Screen('Flip', win0);            Screen('Close', tex);        end;        Screen('PlayMovie', movie, 0);        Screen('CloseMovie', movie);        Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);    elseif stimOrder(trial,2) == -200        %play video        presentstim = toc;        moviename = [ cd baAV200 ];        movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME        Screen('PlayMovie', movie, 1);        presentstim = toc;        while 1            tex = Screen('GetMovieImage', win0, movie);            if tex<=0                break;            end;            Screen('DrawTexture', win0, tex);            Screen('Flip', win0);            Screen('Close', tex);        end;        Screen('PlayMovie', movie, 0);        Screen('CloseMovie', movie);        Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);    elseif stimOrder(trial,2) == -150        %play video        presentstim = toc;        moviename = [ cd baAV150 ];        movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME        Screen('PlayMovie', movie, 1);        presentstim = toc;        while 1            tex = Screen('GetMovieImage', win0, movie);            if tex<=0                break;            end;            Screen('DrawTexture', win0, tex);            Screen('Flip', win0);            Screen('Close', tex);        end;        Screen('PlayMovie', movie, 0);        Screen('CloseMovie', movie);        Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);    elseif stimOrder(trial,2) == -100        %play video        presentstim = toc;        moviename = [ cd baAV100 ];        movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME        Screen('PlayMovie', movie, 1);        presentstim = toc;        while 1            tex = Screen('GetMovieImage', win0, movie);            if tex<=0                break;            end;            Screen('DrawTexture', win0, tex);            Screen('Flip', win0);            Screen('Close', tex);        end;        Screen('PlayMovie', movie, 0);        Screen('CloseMovie', movie);        Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);    elseif stimOrder(trial,2) == -50        %start reading movie        moviename = [ cd baAV50 ];        %play video        movie = Screen('OpenMovie', win0, moviename);        %MOVIE TIME        % Start playback engine:        Screen('PlayMovie', movie, 1);        presentstim = toc;                % Playback loop: Runs until end of movie or keypress:        while 1            % Wait for next movie frame, retrieve texture handle to it            tex = Screen('GetMovieImage', win0, movie);                        % Valid texture returned? A negative value means end of movie reached:            if tex<=0                % We're done, break out of loop:                break;            end;                        % Draw the new texture immediately to screen:            Screen('DrawTexture', win0, tex);                        % Update display:            Screen('Flip', win0);                        % Release texture:            Screen('Close', tex);        end;                % Stop playback:        Screen('PlayMovie', movie, 0);                % Close movie:        Screen('CloseMovie', movie);                Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);            elseif stimOrder(trial,2) == 0        %play video        presentstim = toc;        moviename = [ cd ba ];        movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME        Screen('PlayMovie', movie, 1);        presentstim = toc;        while 1            tex = Screen('GetMovieImage', win0, movie);            if tex<=0                break;            end;            Screen('DrawTexture', win0, tex);            Screen('Flip', win0);            Screen('Close', tex);        end;        %Screen('PlayMovie', movie, 0);        Screen('CloseMovie', movie);        Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);    elseif stimOrder(trial,2) == 50        %play video        presentstim = toc;        moviename = [ cd baVA50 ];        movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME        Screen('PlayMovie', movie, 1);        presentstim = toc;        while 1            tex = Screen('GetMovieImage', win0, movie);            if tex<=0                break;            end;            Screen('DrawTexture', win0, tex);            Screen('Flip', win0);            Screen('Close', tex);        end;        Screen('PlayMovie', movie, 0);        Screen('CloseMovie', movie);        Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);    elseif stimOrder(trial,2) == 100        %play video        presentstim = toc;         moviename = [ cd baVA100 ];        movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME        Screen('PlayMovie', movie, 1);        presentstim = toc;        while 1            tex = Screen('GetMovieImage', win0, movie);            if tex<=0                break;            end;            Screen('DrawTexture', win0, tex);            Screen('Flip', win0);            Screen('Close', tex);        end;        Screen('PlayMovie', movie, 0);        Screen('CloseMovie', movie);        Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);    elseif stimOrder(trial,2) == 150        %play video        presentstim = toc;         moviename = [ cd baVA150 ];        movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME        Screen('PlayMovie', movie, 1);        presentstim = toc;        while 1            tex = Screen('GetMovieImage', win0, movie);            if tex<=0                break;            end;            Screen('DrawTexture', win0, tex);            Screen('Flip', win0);            Screen('Close', tex);        end;        Screen('PlayMovie', movie, 0);        Screen('CloseMovie', movie);        Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);    elseif stimOrder(trial,2) == 200        %play video        presentstim = toc;         moviename = [ cd baVA200 ];        movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME        Screen('PlayMovie', movie, 1);        presentstim = toc;        while 1            tex = Screen('GetMovieImage', win0, movie);            if tex<=0                break;            end;            Screen('DrawTexture', win0, tex);            Screen('Flip', win0);            Screen('Close', tex);        end;        Screen('PlayMovie', movie, 0);        Screen('CloseMovie', movie);        Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);    elseif stimOrder(trial,2) == 250        %play video        presentstim = toc;         moviename = [ cd baVA250 ];        movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME        Screen('PlayMovie', movie, 1);        presentstim = toc;        while 1            tex = Screen('GetMovieImage', win0, movie);            if tex<=0                break;            end;            Screen('DrawTexture', win0, tex);            Screen('Flip', win0);            Screen('Close', tex);        end;        Screen('PlayMovie', movie, 0);        Screen('CloseMovie', movie);        Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);    elseif stimOrder(trial,2) == 300        fprintf(fid,'\tOffset %d',stimOrder(trial,2));        %play video        presentstim = toc;         moviename = [ cd baVA300 ];        movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME        Screen('PlayMovie', movie, 1);        presentstim = toc;        while 1            tex = Screen('GetMovieImage', win0, movie);            if tex<=0                break;            end;            Screen('DrawTexture', win0, tex);            Screen('Flip', win0);            Screen('Close', tex);        end;        Screen('PlayMovie', movie, 0);        Screen('CloseMovie', movie);        Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);        fprintf(fid,'\tVideo Played');    elseif stimOrder(trial,2) == 400        fprintf(fid,'\tOffset %d',stimOrder(trial,2));        %play video        presentstim = toc;         moviename = [ cd baVA400 ];        movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME        Screen('PlayMovie', movie, 1);        presentstim = toc;        while 1            tex = Screen('GetMovieImage', win0, movie);            if tex<=0                break;            end;            Screen('DrawTexture', win0, tex);            Screen('Flip', win0);            Screen('Close', tex);                    end        Screen('CloseMovie', movie);        %Screen('PlayMovie', movie, 0);                Screen('CopyWindow', cross, win0, stimRect, rectS)        Screen('Flip',win0);        fprintf(fid,'\tVideo Played');     elseif stimOrder(trial,2) == 500         %play video         presentstim = toc;         moviename = [ cd baVA500 ];         movie = Screen('OpenMovie', win0, moviename); %MOVIE TIME         Screen('PlayMovie', movie, 1);         presentstim = toc;         while 1             tex = Screen('GetMovieImage', win0, movie);             if tex<=0                 break;             end;             Screen('DrawTexture', win0, tex);             Screen('Flip', win0);             Screen('Close', tex);         end;         Screen('PlayMovie', movie, 0);         Screen('CloseMovie', movie);         Screen('CopyWindow', cross, win0, stimRect, rectS)         Screen('Flip',win0);     end        %WaitSecs(.25);    WaitSecs(.15);    Screen('CopyWindow', cross, win0, stimRect, rectS)    Screen('DrawText',win0,'      same time = 1        different time = 2',outRect(3)/2-210,outRect(4)/2+50,cWhite0);    Screen('Flip',win0);    fprintf(fid,'\tResponse Window Presented');        %     %Visual preceding Audio    %     if stimOrder(trial,3)== 1    %         delay = stimOrder(trial,2);    %         numDelay = round(delay/hz); %hz is the framerate    %         Screen('CopyWindow', flash, win0, stimRect, rectS)    %         Screen('Flip',win0);    %         timeV = toc;    %         Screen('CopyWindow', cross, win0, stimRect, rectS)    %         Screen('Flip',win0);    %         WaitSecs(delay/1000-0.005);%Screen('WaitBlanking',win0,numDelay)%numDelay is # frames to pause    %         PsychPortAudio('Start', pahandle, 1, 0);    %         timeA = toc;    %         realDelay = (timeA-timeV)*1000;    %         presentstim = toc;    %     end    %    %     %Audio preceding Visual    %     if stimOrder(trial,3)== 2    %         delay = stimOrder(trial,2);    %         numDelay = round(delay/hz); %hz is the framerate    %         Screen('CopyWindow', cross, win0, stimRect, rectS)%make sure you are aligned with a refresh    %         Screen('Flip',win0);    %         PsychPortAudio('Start', pahandle, 1, 0);    %         timeA = toc;    %         WaitSecs(abs(delay)/1000-.011);%Screen('WaitBlanking',win0,numDelay)%numDelay is # frames to pause    %         Screen('CopyWindow', flash, win0, stimRect, rectS)    %         Screen('Flip',win0);    %         timeV = toc;    %         Screen('CopyWindow', cross, win0, stimRect, rectS)    %         Screen('Flip',win0);    %         realDelay = (timeA-timeV)*1000;    %         presentstim = toc;    %     end    %    %     %AV synchronus    %     if stimOrder(trial,3)== 0    %         startTime = PsychPortAudio('Start', pahandle, 1, 0.01);    %         timeA = toc;    %         Screen('CopyWindow', flash, win0, stimRect, rectS)    %         Screen('Flip',win0);    %         timeV = toc;    %         Screen('CopyWindow', cross, win0, stimRect, rectS)    %         Screen('Flip',win0);    %         presentstim = toc;    %         realDelay = (timeA-timeV)*1000;    %     end        Priority(0)        %%actual delay between flash and beep    %allTrials(trial,7)=realDelay;    %%difference between intended delay and actual delay    %allTrials(trial,8) = allTrials(trial,7)-allTrials(trial,3);            data.timing(trial,1)=allTrials(trial,5);    %is this variable used at all anymore?    data.timing(trial,2)=allTrials(trial,6);    data.timing(trial,3)=allTrials(trial,7);        %present response Screen    %    WaitSecs(.25);    %         Screen('CopyWindow', cross, win0, stimRect, rectS)    %    Screen('DrawText',win0,'      same time = 1        different time = 2',outRect(3)/2-210,outRect(4)/2+50,cWhite0);    %     Screen('Flip',win0);        %collect response    %     ans=0;    %     %throw up fixation crosshair    %     [keyisdown,secs,keycode] = KbCheck;    %     while ~keyisdown    %         waitSecs(0.250)    %         [keyisdown,secs,keycode] = KbCheck;    %     end    %    %     [secs, keyCode, deltaSecs] = KbWait;    %    %     if KbCheck    %         [~,secs,keycode]=KbCheck;    %         while secs<.25    %             Screen('CopyWindow', cross, win0, stimRect, rectS)    %             Screen('Flip',win0);    %             if key(1|2)    %                 break;    %             end    %         end    %             while secs>=.25    %                 Screen('CopyWindow', cross, win0, stimRect, rectS)    %                 Screen('DrawText',win0,'      same time = 1        different time = 2',outRect(3)/2-210,outRect(4)/2+50,cWhite0);    %                 Screen('Flip',win0);    %                 if key(1|2)    %                     break;    %                 end    %             end    %         end    %     ans=0;        %collect response    [secs, keyCode, deltaSecs] = KbPressWait;        if keyCode(synch) %if judged synchronous        T=toc;  %record time        allTrials(trial,9)=T-presentstim; %reaction time        resp(1,trial)=1;                allTrials(trial,12)=resp(1,trial);  %add response to matrix        if allTrials(trial,11)==allTrials(trial,12) %compare to correct answer            mark(trial)=1;        else            mark(trial)=0;        end            elseif keyCode(asynch) %if judged asynchronous        T=toc; %record time        allTrials(trial,9)=T-presentstim;    %reaction time        resp(1,trial)=2;        allTrials(trial,12)=resp(1,trial);  %add response to matrix        if allTrials(trial,11)==allTrials(trial,12) %compare to correct answer            mark(trial)=1;        else            mark(trial)=0;        end    elseif keyCode(escapekey)        break    end                            allTrials(trial,10)=allTrials(trial,9)-min([allTrials(trial,5) allTrials(trial,6)]); %RT minus some timing variable        %this seems to be redundant    data.responses(trial,2)=resp(1,trial);    if allTrials(trial,11)==allTrials(trial,12)        mark(trial)=1;    else        mark(trial)=0;    end    allTrials(trial,13)=mark(trial);    data.responses(trial,3)=mark(trial);        data.timing(trial,4)=allTrials(trial,9);    FlushEvents('keydown');        data.allTrials=allTrials;        save(fname,'data','allTrials');        trial=trial+1;        PsychPortAudio('Close', [pahandle]);endScreen('FillRect',win0,160, rect0);Screen('DrawText',win0,'saving...',300,rect0(4)/2,0);Screen('Flip',win0);clear SF trim  trial key ans mark corAns rectS;save(fname);ShowCursor;Screen('FillRect',win0,0, rect0);Screen('DrawText',win0,'Thanks for your participation. Press spacebar to exit.',100,rect0(4)/2,255);Screen('Flip',win0);key='';while 1,    if KbCheck        [~,secs,keycode]=KbCheck;        if keycode(spacekey)            break;        end    end;endScreen('closeAll');for i = 1:length(offsets)    accuracies(i,1) = offsets(i);    I = find(allTrials(:,3) == offsets(i));    accuracies(i,2) = 1-mean(allTrials(I,13));endfigure(1);plot(accuracies(:,1), accuracies(:,2))for i = 1:ceil(length(accuracies(:,1))/2)    avgAcc(i,1) = accuracies (i,1);    avgAcc(i,2) = mean([accuracies(i,2) accuracies(length(accuracies(:,2))-i+1,2)]);end%figure(2);%plot(avgAcc(:,1), avgAcc(:,2))save(fname);graph = 'should peak in the middle'